name: Docker Image CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  PROJECT_ID: woven-bonbon-334414
  GKE_CLUSTER: cluster-1    # Add your cluster name here.
  GKE_ZONE: europe-central2-a   # Add your cluster zone here.
  DEPLOYMENT_NAME: demo-service # Add your deployment name here.
  IMAGE: static-site

jobs:
  build-java:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11

    - name: Maven Clean Install
      run: mvn clean install -DskipTests

    - name: Build and Push Docker Image
      uses: mr-smithers-excellent/docker-build-push@v5
      with:
        image: pradnyilk/demo-service
        tags: latest
        registry: docker.io
        dockerfile: Dockerfile
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
      # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker

      # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GKE_SA_KEY }}

      # Set up kustomize
    - name: Set up Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize

      # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |-
        kubectl apply -f demo-service-k8s-deployment.yaml
        kubectl apply -f demo-service-k8s-svc.yaml
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide